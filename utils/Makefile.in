
V =
ifeq ($(strip $(V)),)
	E = @echo
	Q = @
else
	E = @\#
	Q =
endif
export E Q
CC = @CC@
CFLAGS = @CFLAGS@ @OCFLAGS@ -g
BUILDDIR = @BUILDDIR@
LIBNCSNETDIR = ../
LIB=$(LIBNCSNETDIR)/libncsnet.a
PROGS=ping hexflood arping traceroute instat
SRCS=ping.c hexflood.c arping.c traceroute.c instat.c
OBJS=ping.o hexflood.o arping.o traceroute.o instat.o

all: $(LIBNCSNETDIR)/libncsnet.a $(BUILDDIR) $(OBJS) $(PROGS)

$(BUILDDIR):
	$(E) "  MKDIR   " $(BUILDDIR)
	@mkdir -p $(BUILDDIR)

hexflood.o: hexflood.c
	$(E) "  CC      " $<
	$(Q) $(CC) $(CFLAGS) -c -o $@ $<

ping.o: ping.c
	$(E) "  CC      " $<
	$(Q) $(CC) $(CFLAGS) -c -o $@ $<

arping.o: arping.c
	$(E) "  CC      " $<
	$(Q) $(CC) $(CFLAGS) -c -o $@ $<

traceroute.o: traceroute.c
	$(E) "  CC      " $<
	$(Q) $(CC) $(CFLAGS) -c -o $@ $<

instat.o: instat.c
	$(E) "  CC      " $<
	$(Q) $(CC) $(CFLAGS) -c -o $@ $<

hexflood: hexflood.o $(LIB)
	$(E) "  LINK    " $(BUILDDIR)/$@
	$(Q) $(CC) $(CFLAGS) -o $(BUILDDIR)/$@ $< $(LIB)

ping: ping.o $(LIB)
	$(E) "  LINK    " $(BUILDDIR)/$@
	$(Q) $(CC) $(CFLAGS) -o $(BUILDDIR)/$@ $< $(LIB)

arping: arping.o $(LIB)
	$(E) "  LINK    " $(BUILDDIR)/$@
	$(Q) $(CC) $(CFLAGS) -o $(BUILDDIR)/$@ $< $(LIB)

traceroute: traceroute.o $(LIB)
	$(E) "  LINK    " $(BUILDDIR)/$@
	$(Q) $(CC) $(CFLAGS) -o $(BUILDDIR)/$@ $< $(LIB)

instat: instat.o $(LIB)
	$(E) "  LINK    " $(BUILDDIR)/$@
	$(Q) $(CC) $(CFLAGS) -o $(BUILDDIR)/$@ $< $(LIB)

clean:
	$(E) "  CLEAN"
	$(Q) rm -rf config.status config.log autom4te.cache Makefile config.h $(PROGS) $(OBJS)

.PHONY: all clean build
